// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  phone     String   @unique
  username  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Data {
  key       String   @id
  value     String?
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
}

model Finance {
  id          Int      @id @default(autoincrement())
  type        String   // 'income' atau 'expense'
  amount      Float
  description String?
  isDeleted Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
}

model Notes {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  value     String?
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
}

model Todo {
  id          Int      @id @default(autoincrement())
  userId      String   @map("user_id")
  task        String
  priority    String   @default("medium")
  isCompleted Boolean  @default(false) @map("is_completed")
  isDeleted Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  completedAt DateTime?

  @@index([userId], name: "idx_user_id")
  @@map("todos")
}
